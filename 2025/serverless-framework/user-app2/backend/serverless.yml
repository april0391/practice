# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: hojunlim
# "service" is the name of this project. This will also be added to your AWS resource names.
service: user-app2

package:
  # individually: true # 각 함수 개별 패키징
  excludeDevDependencies: true
  exclude:
    - package.json
    - package-lock.json
    - README.md
    - .env
    - local/**
    - serverless.yml

stages:
  default:
    params:
      tableName: "${self:service}-users-table-${sls:stage}"
      dynamodb_endpoint: "https://dynamodb.${aws:region}.amazonaws.com"
  local:
    params:
      dynamodb_endpoint: http://localhost:8000

provider:
  name: aws
  runtime: nodejs22.x
  region: ap-northeast-2
  stage: ${opt:stage, 'dev'}
  memorySize: 128
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
  environment:
    USERS_TABLE: ${param:tableName}
    DYNAMODB_ENDPOINT: ${param:dynamodb_endpoint}

functions:
  api:
    handler: handler.handler
    events:
      - httpApi: "*"

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:tableName}

plugins:
  - serverless-offline
  - serverless-dynamodb

custom:
  serverless-dynamodb:
    start:
      port: 8000
      docker: false
